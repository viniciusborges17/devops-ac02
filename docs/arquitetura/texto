O campo da ciência da computação tem lidado com problemas associados, como a complexidade da informação, desde sua criação.[1] Os primeiros problemas de complexidade foram resolvidos pelos desenvolvedores através da escolha da estrutura de dados, do desenvolvimento de algoritmos e pela aplicação de conceitos de separação de escopos. Embora o termo arquitetura de software seja relativamente novo na indústria, os princípios fundamentais deste campo vêm sendo aplicados esporadicamente pela engenharia de software desde o início dos anos 80. As primeiras tentativas de capturar e explicar a arquitetura de software do sistema foram imprecisas e desorganizadas – freqüentemente caracterizadas por um conjunto de diagramas.[2] Durante o decorrer da década de 90 houve um esforço concentrado para definir e codificar os aspectos fundamentais desta disciplina. Inicialmente um conjunto de padrões de projeto, estilo, melhores práticas, descrição de linguagens, e lógica formal foram desenvolvidas durante este período. A disciplina de arquitetura de software é centrada na ideia da redução da complexidade através da abstração e separação de interesses. O glossário do site oficial SOFTWARE ENGINEERING INSTITUTE (Instituto de Engenharia de Software) [3] descreve que arquitetura de software é a estrutura ou estruturas de um sistema, com todos os elementos de software vendo e tendo suas propriedades vistas por todos os outros elementos e relacionamentos.

  Sendo a arquitetura de sistema uma disciplina em maturação, sem regras claras, a ação do arquiteto de software é ainda uma composição de arte e ciência. Os aspectos de arte da arquitetura de software são devidos ao fato que os sistemas de software comerciais suportam alguns aspectos de um negócio ou missão. Assim como o direcionamento de negócio chave para o suporte os sistemas são descritos nos cenários como requisitos não-funcionais de sistema, também conhecidos como atributos de qualidade, que determinam como um sistema irá se comportar.[4] Cada sistema é único devido à natureza do negócio que ele suporta, tal que o nível dos atributos de qualidade exigidos de um sistema como compatibilidade, extensibilidade, confiabilidade, manutenabilidade, disponibilidade, segurança, usabilidade, dentre outros irão variar para cada aplicação sendo desenvolvida.[4] Para trazer a perspectiva do usuário para dentro da arquitetura de software, pode-se dizer que essa disciplina dá a direção dos passos que serão tomados e as tarefas envolvidas em cada área de especialidade e interesse do usuário, por exemplo, os stakeholders de sistemas de software, os desenvolvedores de software, o grupo de suporte ao software do sistema operacional, os testadores e os usuários de negócio final. 


as diferenças serão salientadas. ....
